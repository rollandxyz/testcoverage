ó.
F/home/dad/workspace/testcoverage/calculation.tests/CalculationTests.cs
	namespace 	
calculation
 
. 
tests 
{ 
public 

class 
CalculationTests !
{ 
[		 	
Theory			 
]		 
[

 	

InlineData

	 
(

 
$num

 
,

 
$num

 
,

 
$num

 
)

 
]

 
[ 	

InlineData	 
( 
$num 
, 
$num 
, 
$num 
) 
] 
[ 	

InlineData	 
( 
$num 
, 
$num 
, 
$num 
)  
]  !
public 
void 
Addition 
( 
decimal $
x% &
,& '
decimal( /
y0 1
,1 2
decimal3 :
result; A
)A B
{ 	
var 
calculation 
= 
new !
Addition" *
(* +
x+ ,
,, -
y. /
)/ 0
;0 1
calculation 
. 
	Calculate !
(! "
)" #
.# $
Should$ *
(* +
)+ ,
., -
Be- /
(/ 0
result0 6
)6 7
;7 8
} 	
[ 	
Theory	 
] 
[ 	

InlineData	 
( 
$num 
, 
$num 
, 
$num 
) 
] 
[ 	

InlineData	 
( 
$num 
, 
$num 
, 
$num 
) 
] 
[ 	

InlineData	 
( 
$num 
, 
$num 
, 
$num 
) 
]  
public 
void 
Subtraction 
(  
decimal  '
x( )
,) *
decimal+ 2
y3 4
,4 5
decimal6 =
result> D
)D E
{ 	
var 
calculation 
= 
new !
Subtraction" -
(- .
x. /
,/ 0
y1 2
)2 3
;3 4
calculation 
. 
	Calculate !
(! "
)" #
.# $
Should$ *
(* +
)+ ,
., -
Be- /
(/ 0
result0 6
)6 7
;7 8
} 	
[ 	
Theory	 
] 
[ 	

InlineData	 
( 
$num 
, 
$num 
, 
$num 
) 
] 
[ 	

InlineData	 
( 
$num 
, 
$num 
, 
$num 
) 
] 
[   	

InlineData  	 
(   
$num   
,   
$num   
,   
$num   !
)  ! "
]  " #
public!! 
void!! 
Multiplication!! "
(!!" #
decimal!!# *
x!!+ ,
,!!, -
decimal!!. 5
y!!6 7
,!!7 8
decimal!!9 @
result!!A G
)!!G H
{"" 	
var## 
calculation## 
=## 
new## !
Multiplication##" 0
(##0 1
x##1 2
,##2 3
y##4 5
)##5 6
;##6 7
calculation$$ 
.$$ 
	Calculate$$ !
($$! "
)$$" #
.$$# $
Should$$$ *
($$* +
)$$+ ,
.$$, -
Be$$- /
($$/ 0
result$$0 6
)$$6 7
;$$7 8
}%% 	
['' 	
Theory''	 
]'' 
[(( 	

InlineData((	 
((( 
$num(( 
,(( 
$num(( 
,(( 
$num(( 
)(( 
](( 
[)) 	

InlineData))	 
()) 
$num)) 
,)) 
$num)) 
,)) 
$num)) 
))) 
])) 
[** 	

InlineData**	 
(** 
$num** 
,** 
$num** 
,** 
$num** 
)** 
]**  
[++ 	

InlineData++	 
(++ 
$num++ 
,++ 
$num++ 
,++ 
$num++ 
,++ 
false++ $
)++$ %
]++% &
public,, 
void,, 
Division,, 
(,, 
decimal,, $
x,,& '
,,,' (
decimal,,) 0
y,,2 3
,,,3 4
decimal,,5 <
result,,= C
,,,C D
bool,,E I
succeeds,,J R
=,,S T
true,,U Y
),,Y Z
{-- 	
var.. 
calculation.. 
=.. 
new.. !
Division.." *
(..* +
x..+ ,
,.., -
y... /
)../ 0
;..0 1
if// 
(// 
succeeds// 
)// 
calculation00 
.00 
	Calculate00 %
(00% &
)00& '
.00' (
Should00( .
(00. /
)00/ 0
.000 1
Be001 3
(003 4
result004 :
)00: ;
;00; <
else11 
Assert22 
.22 
Throws22 
<22 !
DivideByZeroException22 3
>223 4
(224 5
(225 6
)226 7
=>228 :
calculation22; F
.22F G
	Calculate22G P
(22P Q
)22Q R
)22R S
;22S T
}33 	
}44 
}55 